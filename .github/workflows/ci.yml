name: Tests and release

on:
  push:
    branches:
      - "**"
  pull_request:

env:
  CRATE_NAME: dioxus-heroicons
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.platform.os-name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: FreeBSD-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-freebsd
            skip-tests: true
          - os-name: Linux-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-linux-musl
          - os-name: Linux-aarch64
            runs-on: ubuntu-20.04
            target: aarch64-unknown-linux-musl
          - os-name: Linux-arm
            runs-on: ubuntu-20.04
            target: arm-unknown-linux-musleabi
          - os-name: Linux-i686
            runs-on: ubuntu-20.04
            target: i686-unknown-linux-musl
          # Fails to build:
          #
          # error[E0432]: unresolved import `std::sync::atomic::AtomicU64`
          #  --> /cargo/registry/src/index.crates.io-6f17d22bba15001f/generational-box-0.6.1/src/entry.rs:7:20
          #   |
          # 7 |     sync::atomic::{AtomicU64, Ordering},
          #   |                    ^^^^^^^^^
          #   |                    |
          #   |                    no `AtomicU64` in `sync::atomic`
          #   |                    help: a similar name exists in the module: `AtomicU32`
          #
          # - os-name: Linux-powerpc
          #   runs-on: ubuntu-20.04
          #   target: powerpc-unknown-linux-gnu
          - os-name: Linux-powerpc64
            runs-on: ubuntu-20.04
            target: powerpc64-unknown-linux-gnu
          - os-name: Linux-powerpc64le
            runs-on: ubuntu-20.04
            target: powerpc64le-unknown-linux-gnu
          - os-name: Linux-riscv64
            runs-on: ubuntu-20.04
            target: riscv64gc-unknown-linux-gnu
          - os-name: Linux-s390x
            runs-on: ubuntu-20.04
            target: s390x-unknown-linux-gnu
          # Fails to build:
          #
          # error[E0308]: mismatched types
          #   --> /cargo/registry/src/index.crates.io-6f17d22bba15001f/manganis-core-0.6.1/src/linker.rs:42:47
          #    |
          # 42 |       pub const CURRENT: &'static LinkSection = {
          #    |  _______________________________________________^
          # 43 | |         #[cfg(any(
          # 44 | |             target_os = "none",
          # 45 | |             target_os = "linux",
          # ...  |
          # 69 | |         }
          # 70 | |     };
          #    | |_____^ expected `&LinkSection`, found `()`
          #
          # - os-name: NetBSD-x86_64
          #   runs-on: ubuntu-20.04
          #   target: x86_64-unknown-netbsd
          #   skip-tests: true
          - os-name: Windows-aarch64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
            skip-tests: true
          - os-name: Windows-i686
            runs-on: windows-latest
            target: i686-pc-windows-msvc
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
          - os-name: macOS-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
        toolchain:
          - stable
        include:
          - platform:
              os-name: Linux-x86_64
              runs-on: ubuntu-20.04
              target: x86_64-unknown-linux-musl
              bin: ubi
            toolchain: beta
          - platform:
              os-name: Linux-x86_64
              runs-on: ubuntu-20.04
              target: x86_64-unknown-linux-musl
              bin: ubi
            toolchain: nightly
    steps:
      - uses: actions/checkout@v4
      - name: Build crate
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--release"
          strip: false
      - name: Run tests
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "test"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--release"
        if: ${{ !matrix.platform.skip-tests }}
